반복문
-무한: 윈도우, 봇(크롤러), 
-무한x

무한 Loop: 특정 코드를 반복 실행하는 행위

for A in B:

1~100까지 합계를 구한다고 생각
가장 좋은 건 sum(수학)을 이용하는거

악독한 회사가면 수형도 문제를 받음-알고리즘이 없음. 다 매핑해야함
n1=1, n2=2, ..., n100=100, sum=n1+n2+n3+,,,+n100인 문제도 있음 
-좋은 방법은 아님, 변수를 너무 많이 써-가독성이 낮음, 변경에 약함

sum=0;<-쟁점:sum과 while사이에 code가 잔뜩 들어가면 변수를 못 쫒아감-C는 선언문이 처음에 나옴(예전에)
while(n<=1000<-쟁점:개발자들이 여기서 실수를 많이 함, 그러면 무한루프 됨:증감식을 자꾸 까먹어서) {
	sum=sum+n;
	n=n+1;
} 그래서 가독성이 안좋음-그래서 for문 등장!

for문으로 가면 가독성도 좋아지고, 증감식도 까먹지 않게 됨.

for(int sum=0;n<=1000;n=n+1){
	sum=sum+n;
}
그러다 파이썬에서 for A in B:가 나옴
for A in B: #파이썬
for ( a-초기값 ; b-판단식:이게 제일 중요 ; c-증감문 ) #C언어
in이 판단식, in도 연산자-맞고 틀리고를 연산해주는 애, :-{}이거 2개가 대응 됨
a초기값-B와 대응, c증감문-B와 대응
그럼 A는? 반복자!

for num in range(100):
	print(num)
range(100)=[0,1,2...,99]임
in판단문- 뭘 판단하는데? in은 B자리에 있는 리스트의 element인지 판단함, ie A는 B안에 있습니까?
초깃값이 0이고 그걸 num에 할당시킴
num=0 -> {0}
num=1 -> {1}
...
num=99 -> {99}
이제 리스트 없음. in이 안되니까 for가 종료 되는 것.
대신 num을 i n 안녕 같이 다르게 쓸 수는 있지만, 건드릴 수는 없음. 따로 초기값을 주고 그럴 수 없음
그냥 B인 리스트를 줘야함. 값이 하나짜리인 변수는 올 수 없음.
B가 상당히 중요함. 파이썬은 이 리스트를 갖고 노는걸 계속 해야함

[[(a,b)]]: 중첩 for루프 필요함.

코드 짤 때 for루프가 어려우면 표부터 그려라

Bubble sort는 절대 못씀 쓰지마셈, 회사 말아먹음.
nested for 루프 nested while 루프는 반드시 연습하셈

1.파이썬 공부를 해라
2.변수,리스트,제어문,함수를 위주로 공부해라
3.너무 많이 공부하지마라, 개발자가 쓰는 것처럼 공부하지마셈. 기본적으로 알아야할 걸 알고,
  파이썬 본진문서에 가서 우리가 원하는 기능을 쓸 수 만 있도록 하셈

시간, 달력
달력 <=> {문화, 지역}에 영향을 받음.

미국은 동부시와 서부시가 다름
그래서 보고서에 미국에서 오후 3시에 화장품이 잘나감 이라고 보내면 안됨
미국(오후 3시, 국내 몇시)---

단기, 헤이세이

제 1의 원칙. 시간계산은 우리가 하지 않음. 한국사람이라 생각하지말고 지구인이라 생각하셈
지역과 문화는 아주아주 다루기 힘듦.
우리는 우리가 직접적으로 계산을 하지 않아야하는 것은 최대한 하지 마셈.-대표적:시간
그래서 시간을 우리가 적지말고 datetime으로 바꿔서 넣으셈.
모든 시간을 UTC로 변경해서 쓰셈, 항상 상대방의 문화를 고려하셈

지도기반으로 시각화는 필수
seaborn도 수업 좀 하겠음-실라버스와 많이 다를 수 있다.

통계치가 가설검증 과정에서 이루어짐.

경향성은 시계열로 알 수 있음.

우리가 한 EDA는 가설을 사용해서 다른 가설을 가지고 오는 것
-그러다 어느 순간 가설이 맞는 순간이 올 것-이 때 통계 사용-그리고 머신 러닝으로 자동으로 사용
-그러고 결과가 나올 것.