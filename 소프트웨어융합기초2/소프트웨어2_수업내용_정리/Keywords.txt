탐색적 데이터 분석(Exploralory Data Analysis, EDA 
데이터 분석-의사 결정 프로세스의 최적화
면접 때 반드시 이 4개 기억!!
1. 문제 정의->가설 검증
2. 작은 데이터로 시작
3. 작은 도구로 시작
4. 간단한 분석 기법 적용

면접 때, 문제를 정의하란건지, 데이터를 모아오란건지, 파이썬 사용방법을 물어보는건지
분석기법을 물어보는건지 잘 판단해야함.-그래야 답변이 쉬움
:도구를 물어보면 "저는 파이썬을 잘 다루지 못하지만, 이런건 이렇게 하면 됩니다"
"파이썬 왜 못하나", "데이터 분석 용으로 밖에 안배움", "다른건 뭐 다룰 줄 아나",
"제 프로젝트에선 이정도 파이썬이면 됐습니다. 회사에선 무엇을 사용하나요?"

데이터 분석 기법
1) 탐색적 데이터 분석
-주어진 데이터를 탐색하며 다양한 패턴을 발견하고 가설을 세우는 단계

2) 통계적 추론-이건 통계과 아니면 버리셈
-현상에 대한 가설을 다양한 실험으로 검정해보는 단계
-주어진 현상을 이해한 후, 인과적인 결론이나 지식을 이끌어내기 위한 단계로
 앞서 만들어낸 가설의 진위를 검정하는 것이 목표
EDA의 가장 큰 목표는 "주어진 현상에서 더 탐구할 만한 가치가 있는 가설을 세우는 것"

3)기계학습

도서관 가서 CODE 코드, 찰스 펫졸드 읽어보셈

컴퓨터란 계산기
컴퓨터는 메모리, CPU, 프로그램 이 세개로 이루어져있음

우리가 만드는 거는 프로그램, 그래서 CPU랑 메모리만 있으면 됨
변수는 메모리와 관련되어 있는 ---, -이게 핵심 단어
제어문은 CPU와 관련되어 있는 ---,

현대는 존 폰 노이만이 프로그램을 메모리에 두고 써야한다고 해서
존 폰 노이만의 architecture를 쓰는 것

파이썬 코드는 우리의 메모리에서만 사용된다. 예외는 없음.
컴퓨터는 메모리와 CPU로만 이루어져 있고
프로그램이 메모리와 CPU를 이용하는 것.

메모리 @$@@
CPU: A<->B<->C<->A
프로그램 Current State   Read Symbol   Write Symbol   Next Position   Next State
	A		@		@	->		A
	A		$		$	->		B
	B		@		@	<-		C
	C		$		@	->		C
	C		@		$	->		B

A에서 시작 @를 읽었음 -> @를 씀. A로 가래 $를 읽음, $를 쓰래->@$, B로 감
@를 읽고 @를 씀 ->@$@ , 왼쪽으로 가서 C를 읽음 $를 읽고 @를 쓰래 ->@@@ 우측으로 가서 C로 감
@를 읽고 $를 씀-> @@@$ 하고 다시 B로 감. 반복하는 것, $를 끝으로 보내는 프로그램임

공리
1.모든 프로그램은 '반드시' 메모리(주기억장치)에서 실행된다. 예외는 없다.
2. 메모리는 모든 값을 0과 1로 저장한다. 예외는 없다.
-이 2가지가 메모리와 관련된 가장 중요한 이론임
-malloc:메모리에 공간이 없으면 null, 있으면 그 주소의 첫번째 값
3. 모든 프로그램은 입력-처리-출력으로 구성되고 , 그 형태를 반복한다
4. 모든 입력은 제어할 수 없으며, 출력만 제어해야한다.
5. CPU는 머신코드만 처리할 수 있다.

일반 표는 행(row)우선임-표를 행의 집합이라고 생각하겠다는 것(C, Python, Java)
행을 우선으로 하기 때문에 '열'을 다루는 기능을 줘야함

행을 열우선으로 구성할 수도 있긴함.(Matlab, Fotran) 
마찬가지로 + '행'을 다루는 기능을 줘야함

-전처리를 하는 것은 원본 데이터를 함부로 수정하면 안되기 때문에
원본데이터를 직접하지 않고 select_col처럼 원본데이터에서
내가 쓰고 싶은 곳을 가지고 와서 거기다가 수정해야함
(원본은 건드리지마라)

모든 프로그램은 메모리에서 돌아가고
->변수선언, 사용법
->자료형
이 2개는 필수적으로 늘 알아둬야함

1)컴파일 언어-ex)C-한번에 이해시킴
2)인터프리터-ex)파이썬-한줄한줄 읽어서 컴퓨터에게 이해시켜줌

IMF의 정보를 이용해서 맨큐의 모든 문제를 포트폴리오로 정리해서 
제출, 우리과 책도 해볼 수 있을 것.

근데 입력은 제어가 안 됨.
홈페이지: ID에 캐릭터 이름, PW에 주민번호를 쓴 경우가 있음
12살이 쓰는게 입력이 제어가 될까? 안 됨, 모든 들어오는 입력을
처리에서 처리해줘야함.
[입력은 중요하다.]

버커킹 지수 만들어보고, 문제 다 풀어보자
버거킹 지수- 상권 분석

원본데이터를 오염 시키면 안 됨. 무조건 전처리 필수

안될 때 의심, 리스트 아닌거 아냐? 왜 행우선이 아니라 열우선이지?
파이썬 아닌거 아냐?

파이썬에서 리스트인지 아닌지 어떻게 판단해?
-타입함수를 사용하면 됨
type()

type(raw_graduate)=pandas.core.frame.DataFrame
여기서 DataFrame을 보면 파이썬이 아님을 알 수 있음
R에서 쓰던걸 파이썬이 Data분석을 위해 Pandas를 통해 재구현 한거

Pandas란?
pandas는 SQL Table, Excel 스프레드시트와 같은 열이 
균일하지 않은 종류의 테이블 데이터나 행 및 열이 일정하지 않은 데이터를 다룰 수 있음
NxN(정방행렬)은 수학을 쓰는게 더 좋음

DataFrame 표같은거

행 vs 열
파이썬은 행우선, 판다스는 열우선
행우선은 열을 다룰 수 있는 기능이 필요함

그래서 파이썬이 R(왕좌에 있었음)을 참조해서 Pandas를 만듬
파이썬 R Excel은 열을 다룰 수 있는 기능이 많음-그래서 데이터분석에 쓰임

https://pandas.pydata.org/pandas-docs/stable/getting_started/10min.html

print('X1:{}, X2:{}'.format(X1,X2))

파이썬에서 알아야하는 것- 변수(메모리 주소에 이름을 붙인다), 문자열, 리스트(생각보다 소중함)

공공정보데이터, 오픈데이터, 통계청

unindent does not match any outer indentation level 띄어쓰기 잘못해서 나오는 오류
계속해서 돌아가면 stop버튼 누르면 됨

dropna() : 값 이상한거 날리는 애

함수
1) "함수 이름"=>반드시 있어야 함
2) 매개변수=>있을 수도 있고, 없을 수도 있음
3) 반환값=>있을 수도 있고, 없을 수도 있음

apply함수
1)인자<-매개변수가 하나인!! 함수를 주세요 라는 뜻.

graduate_data.info()---이걸로 누락데이터 부터 찾아야함
면접가면
<class 'pandas.core.frame.DataFrame'>
Int64Index: 3458 entries, 1 to 3458
Data columns (total 9 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   지역      3456 non-null   object                ----지역은 3458이 아님 2개가 잘못된 데이터
 1   학교명     3458 non-null   object 
 2   학교코드    3458 non-null   object 
 3   졸업자     3424 non-null   float64             ----졸업자 데이터 누락이 34개: 왜 데이터가 누락 됐는지 물어보기 
 4   과고      3424 non-null   float64
 5   외고      3424 non-null   float64
 6   총합      3424 non-null   float64
 7   시도      3458 non-null   object 
 8   구군      3458 non-null   object 
dtypes: float64(4), object(5)
memory usage: 430.2+ KB
이거 숫자부터 봐야함, 데이터 전처리 과정에서 데이터 누락 과정 보기
1235 데이터 분석가를 지망했다는 걸 확실히 어필, 이 누락 데이터에 대해서 고민한다는 것.
34개의 데이터가 1% 이므로, 무시해도 될만한 수준임을 말함. 각자의 학교들에 대해 찾아볼 시간을 주겠냐고 물어봄
실제로 0명일수도 있음. 반드시 누락데이터에 대해서 물어봐야함. 
1. 1%뿐이므로 전체에 대해 영향이 낮음.
2. 졸업하지 않은 학교가 있을거다.
3. 34개의 학교에 졸업자 및 과고 및 외고가 없을 수 있음. 알아내기에 효율이 떨어진다.

groupby를 화면에 출력하는 법- for로 보면 됨

pandas 10 minutes

lambda: 함수이름, x: 매개변수, x.split(' ')[1]: 반환값

graduate_data['시도'].isnull().sum()
graduate_data.index[graduate_data['시도'].isnull()]
graduate_data.loc[588]

둘 다 행을 가져오지만 
.loc[label]-label이 오기에 588번 라벨이 붙은 자료를 가져옴
.iloc[position]-위치정수: iloc[1]이면 인덱스는 0부터 시작하므로 2번째 자료를 가져옴